def printInfo() {
  def items = [
  ghprbActualCommit,
  ghprbActualCommitAuthor,
  ghprbActualCommitAuthorEmail,
  ghprbPullDescription,
  ghprbPullId,
  ghprbPullLink,
  ghprbPullTitle,
  ghprbSourceBranch,
  ghprbTargetBranch,
  ghprbCommentBody,
  sha1
  ]
  items.each { item ->
  println item
  }
}
pipeline {
  agent none
  stages {
    def buildStatus = true
    stage('testing') {
    agent { label 'master' }
      steps {
        try {
          printInfo() 
        }
        catch (err) {
          buildStatus = false
        }
      }
    }
    stage('notification') {
    //TODO: Find sane way to correlate github names to slack names, maybe Full Names except Jon
      if buildStatus {
        slackSend (color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
      }
      else {
        //Open issue on failure and close PR to prevent spamming
        slackSend (color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
      }
    }
  }
}
