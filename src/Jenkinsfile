import groovy.transform.Field;
@Field buildStatus = true

def setBuildStatus(boolean name=''){
  buildStatus=name
}

def printInfo() {
  def items = [
  ghprbActualCommit,
  ghprbActualCommitAuthor,
  ghprbActualCommitAuthorEmail,
  ghprbPullDescription,
  ghprbPullId,
  ghprbPullLink,
  ghprbPullTitle,
  ghprbSourceBranch,
  ghprbTargetBranch,
  ghprbCommentBody,
  sha1
  ]
  items.each { item ->
  println item
  }
}

pipeline {
  agent none
  stages {
    stage('testing') {
    agent { label 'master' }
      steps {
        script {
          try {
            printInfo() 
          }
          catch (err) {
            setBuildStatus(false)
          }
        }
      }
    }
    stage('notification') {
      agent { label 'master' }
      steps {
      //TODO: Find sane way to correlate github names to slack names, maybe Full Names except Jon
        script {
          if(buildStatus) {
            //TODO implement slack notifier class or talk with jon about the plugin, 
            //slackSend (color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            println "Build Status: ${buildStatus}
          }
          else {
            //Open issue on failure and close PR to prevent spamming
            println "Build Status: ${buildStatus}
            //slackSend (color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
          }
        }
      }
    }
  }
}
